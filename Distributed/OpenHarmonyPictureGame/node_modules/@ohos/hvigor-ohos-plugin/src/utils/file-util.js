"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 *
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileUtil = void 0;
const fs = __importStar(require("fs-extra"));
const path_1 = __importDefault(require("path"));
/**
 * 处理文件的工具类
 *
 * @since 2021/12/29
 */
class FileUtil {
    static isDirectory(...pathSegments) {
        return fs.statSync(path_1.default.resolve(...pathSegments)).isDirectory();
    }
    static checkDirWithoutDelete(...pathSegments) {
        const dirPath = path_1.default.resolve(...pathSegments);
        if (!fs.existsSync(dirPath)) {
            fs.mkdirSync(dirPath, { recursive: true });
        }
    }
    static checkFile(...pathSegments) {
        const filePath = path_1.default.resolve(...pathSegments);
        if (!fs.existsSync(filePath)) {
            FileUtil.makeFile(filePath);
        }
        fs.removeSync(filePath);
        FileUtil.makeFile(filePath);
    }
    static makeFile(filePath, data = '') {
        fs.writeFileSync(filePath, data);
    }
}
exports.FileUtil = FileUtil;
//# sourceMappingURL=file-util.js.map