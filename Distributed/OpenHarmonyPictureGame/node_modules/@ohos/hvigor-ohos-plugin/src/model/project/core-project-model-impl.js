"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 *
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreProjectModelImpl = void 0;
const common_const_js_1 = require("../../const/common-const.js");
const path_1 = __importDefault(require("path"));
const module_model_impl_js_1 = require("../module/module-model-impl.js");
const array_util_js_1 = require("../../utils/array-util.js");
const project_file_reader_js_1 = require("../../utils/project-file-reader.js");
const fs = __importStar(require("fs-extra"));
const validate_util_js_1 = require("../../utils/validate-util.js");
const ohos_logger_js_1 = require("../../utils/log/ohos-logger.js");
/**
 * Stage模型的工程持久化数据模型,包含工程源码数据,配置数据等
 *
 * @since 2022/1/20
 */
class CoreProjectModelImpl {
    constructor(projectPath, name) {
        this._log = ohos_logger_js_1.OhosLogger.getLogger(CoreProjectModelImpl.name);
        this.subModels = new Map();
        this.projectPath = projectPath;
        this.name = name;
        this._profilePath = path_1.default.resolve(this.projectPath, common_const_js_1.CommonConst.PROFILE_JSON5);
        // project build-profile.json5 schema check
        this.projectBuildProfileCheck(this._profilePath);
        this._profileOptions = project_file_reader_js_1.ProjectFileReader.getJson5Obj(this.getProfilePath());
        this.projectStatusCheck();
        this.initSubProject();
    }
    projectStatusCheck() {
        const compileApiVersion = this.getCompileApiVersion();
        const compatibleApiVersion = this.getCompatibleApiVersion();
        if (compileApiVersion < 8) {
            this._log._buildError("Only api8 and later are supported for hvigor!")
                ._solution(`Please change compileApiVersion:'${compileApiVersion}'.`)
                ._file(this.projectPath)
                ._printErrorAndExit(this.name);
        }
        if (compatibleApiVersion > compileApiVersion) {
            this._log._buildError("CompatibleApiVersion can not be larger than compileApiVersion!")
                ._solution(`Please change compileApiVersion:'${compileApiVersion}'.`)
                ._file(this.projectPath)
                ._printErrorAndExit(this.name);
        }
    }
    initSubProject() {
        const modules = this.getProfileOpt().modules;
        for (let i = 0; i < modules.length; i++) {
            const modelPath = path_1.default.resolve(this.projectPath, modules[i].srcPath);
            const newModel = new module_model_impl_js_1.ModuleModelImpl(modelPath, modules[i].name, this);
            this.subModels.set(modules[i].name, newModel);
        }
    }
    getBuildProfileName() {
        return common_const_js_1.CommonConst.BUILD_FILE_NAME;
    }
    getName() {
        return this.name;
    }
    getPackageJsonPath() {
        return path_1.default.resolve(this.projectPath, common_const_js_1.CommonConst.PACKAGE_JSON);
    }
    getProfilePath() {
        return this._profilePath;
    }
    getProjectDir() {
        return this.projectPath;
    }
    getProfileOpt() {
        return this._profileOptions;
    }
    getSubProjects() {
        return this.subModels;
    }
    getModuleModelByName(moduleName) {
        return this.subModels.get(moduleName);
    }
    getCompileApiVersion() {
        return this.getProfileOpt().app.compileSdkVersion;
    }
    getCompatibleApiVersion() {
        return this.getProfileOpt().app.compatibleSdkVersion;
    }
    /**
     * 获取根项目下build-profile.json5中的applyToProduct配置
     *
     * @param moduleName
     * @param targetName
     */
    getTargetApplyProducts(moduleName, targetName) {
        const module = (0, array_util_js_1.getElementFromArr)(this._profileOptions.modules, moduleName);
        if (module === undefined) {
            return undefined;
        }
        const target = (0, array_util_js_1.getElementFromArr)(module.targets, targetName);
        if (target === undefined) {
            return undefined;
        }
        return target.applyToProducts;
    }
    /**
     * 根据moduleName获取build-profile.json5中的module配置
     *
     * @param moduleName
     */
    getModuleProfileOpt(moduleName) {
        return (0, array_util_js_1.getElementFromArr)(this._profileOptions.modules, moduleName);
    }
    projectBuildProfileCheck(projectBuildProfilePath) {
        const projectSchema = require('../../../res/schemas/ohos-project-build-profile-schema.json');
        if (!fs.existsSync(projectBuildProfilePath)) {
            this._log._buildError(`Can not find build config file build-profile.json5.`)
                ._file(projectBuildProfilePath)
                ._printErrorAndExit(this.name);
        }
        validate_util_js_1.ValidateUtil.doSchemaCheck(this.name, projectBuildProfilePath, projectSchema);
    }
}
exports.CoreProjectModelImpl = CoreProjectModelImpl;
//# sourceMappingURL=core-project-model-impl.js.map