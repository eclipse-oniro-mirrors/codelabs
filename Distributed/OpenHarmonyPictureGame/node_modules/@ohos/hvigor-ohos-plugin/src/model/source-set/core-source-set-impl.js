"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 *
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreSourceSetImpl = void 0;
const path_1 = __importDefault(require("path"));
const code_type_enum_js_1 = require("../../enum/code-type-enum.js");
const code_model_impl_js_1 = require("../code-source/code-model-impl.js");
const fs_1 = __importDefault(require("fs"));
/**
 * module中每个target对应的一个sourceSet对象
 *
 * @since 2022/2/24
 */
class CoreSourceSetImpl {
    constructor(sourceSetRoot, targetResModel) {
        this.sourceSetRoot = sourceSetRoot;
        this.codeMap = this.initCodeMap();
        this.targetResModel = targetResModel;
    }
    getSourceSetRoot() {
        return this.sourceSetRoot;
    }
    getCodeMap() {
        return this.codeMap;
    }
    getTargetResPath() {
        return this.targetResModel.getResourcePath();
    }
    initCodeMap() {
        const map = new Map();
        for (const code of Object.values(code_type_enum_js_1.CodeType)) {
            if (typeof code !== "string") {
                continue;
            }
            const codeDir = code.toString().toLowerCase();
            const codePath = path_1.default.resolve(this.sourceSetRoot, codeDir);
            if (fs_1.default.existsSync(codePath)) {
                map.set(code, new code_model_impl_js_1.CodeModelImpl(codePath, code));
            }
        }
        return map;
    }
}
exports.CoreSourceSetImpl = CoreSourceSetImpl;
//# sourceMappingURL=core-source-set-impl.js.map