"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 *
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegacyModuleModelImpl = void 0;
const legacy_target_source_set_impl_js_1 = require("../source-set/legacy-target-source-set-impl.js");
const legacy_ability_model_impl_js_1 = require("../ability/legacy-ability-model-impl.js");
const module_type_enum_js_1 = require("../../enum/module-type-enum.js");
const path_1 = __importDefault(require("path"));
const core_module_model_impl_js_1 = require("./core-module-model-impl.js");
const fs_1 = __importDefault(require("fs"));
const project_file_reader_js_1 = require("../../utils/project-file-reader.js");
const legacy_form_model_impl_js_1 = require("../ability/legacy-form-model-impl.js");
const common_const_js_1 = require("../../const/common-const.js");
const ohos_logger_js_1 = require("../../utils/log/ohos-logger.js");
const defaultTargetName = common_const_js_1.DefaultTargetConst.DEFAULT_TARGET;
const ohosTestTargetName = common_const_js_1.DefaultTargetConst.OHOS_TEST_TARGET;
/**
 * Fa模型的模块持久化数据模型,包含模块源码数据,配置数据等
 *
 * @since 2022/1/20
 */
class LegacyModuleModelImpl extends core_module_model_impl_js_1.CoreModuleModelImpl {
    constructor(modulePath, moduleName, parentProject) {
        super(modulePath, moduleName, parentProject);
        this._legacyAbilitiesMap = new Map();
        this.initDefaultTargetSourceSet();
    }
    static validateSameNameAbility(abilityModels) {
        const abilityNameSet = new Set();
        const _log = ohos_logger_js_1.OhosLogger.getLogger('Ability');
        let isError = false;
        for (let i = 0; i < abilityModels.length; i++) {
            const abilityModelName = abilityModels[i].getName();
            if (abilityNameSet.has(abilityModelName)) {
                _log.error(`The duplicate ability name: ${abilityModelName}`);
                isError = true;
            }
            else {
                abilityNameSet.add(abilityModelName);
            }
        }
        if (isError) {
            _log.errorMessageExit('The ability name must be different.');
        }
    }
    initDefaultTargetSourceSet() {
        // 初始化创建default的target sourceSet
        const defaultTargetSourceSet = new legacy_target_source_set_impl_js_1.LegacyTargetSourceSetImpl(path_1.default.resolve(this._sourceRootDir, "main"));
        this.targetSourceSetMap.set(defaultTargetName, defaultTargetSourceSet);
        this.initAbilityInfo(defaultTargetName, defaultTargetSourceSet);
        const ohosTestTargetSourceSet = new legacy_target_source_set_impl_js_1.LegacyTargetSourceSetImpl(path_1.default.resolve(this._sourceRootDir, "ohosTest"));
        this.targetSourceSetMap.set(ohosTestTargetName, ohosTestTargetSourceSet);
        this.initAbilityInfo(ohosTestTargetName, ohosTestTargetSourceSet);
    }
    /**
     * 获取需要进行编译的ability信息
     */
    getLegacyAbilities(targetName = defaultTargetName) {
        const abilities = this._legacyAbilitiesMap.get(targetName);
        return abilities === undefined ? this._legacyAbilitiesMap.get("default") : abilities;
    }
    getModuleType() {
        const legacySourceSet = this.getSourceSetByTargetName();
        const moduleTypeStr = legacySourceSet.getLegacyModuleTargetRes()
            .getConfigJsonOpt()
            .module
            .distro
            .moduleType;
        return module_type_enum_js_1.ModuleType.valueOf(moduleTypeStr);
    }
    getSourceSetByTargetName(targetName = defaultTargetName) {
        if (this.targetSourceSetMap.has(targetName)) {
            return this.targetSourceSetMap.get(targetName);
        }
        return this.targetSourceSetMap.get(defaultTargetName);
    }
    getJsonObjByTargetName(targetName) {
        return this.getSourceSetByTargetName(targetName).getLegacyModuleTargetRes().getConfigJsonOpt();
    }
    initAbilityInfo(targetName, targetSourceSet) {
        const configJsonPath = targetSourceSet.getLegacyModuleTargetRes().getJsonPath();
        if (!fs_1.default.existsSync(configJsonPath)) {
            return;
        }
        const configJsonObj = project_file_reader_js_1.ProjectFileReader.getJson5Obj(configJsonPath);
        const abilityObjs = configJsonObj.module.abilities ?
            configJsonObj.module.abilities : [];
        const legacyAbilities = [];
        for (let i = 0; i < abilityObjs.length; i++) {
            legacyAbilities.push(new legacy_ability_model_impl_js_1.LegacyAbilityModelImpl(configJsonPath, abilityObjs[i].name));
        }
        LegacyModuleModelImpl.validateSameNameAbility(legacyAbilities);
        // api 8 form
        const jsObjs = configJsonObj.module.js ? configJsonObj.module.js : [];
        for (let i = 0; i < jsObjs.length; i++) {
            if ('form' !== jsObjs[i].type) {
                continue;
            }
            legacyAbilities.push(new legacy_form_model_impl_js_1.LegacyFormModelImpl(configJsonPath, jsObjs[i]));
        }
        this._legacyAbilitiesMap.set(targetName, legacyAbilities);
    }
}
exports.LegacyModuleModelImpl = LegacyModuleModelImpl;
//# sourceMappingURL=legacy-module-model-impl.js.map