"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompileResource = void 0;
const restool_command_builder_js_1 = require("../builder/restool-command-builder.js");
const process_utils_js_1 = require("../utils/process-utils.js");
const path_1 = __importDefault(require("path"));
const file_util_js_1 = require("../utils/file-util.js");
const ohos_hap_task_js_1 = require("./task/ohos-hap-task.js");
const build_directory_const_js_1 = require("../const/build-directory-const.js");
const ohos_logger_js_1 = require("../utils/log/ohos-logger.js");
const project_file_reader_js_1 = require("../utils/project-file-reader.js");
/**
 * 编译资源
 *
 * @since 2022/1/10
 */
class CompileResource extends ohos_hap_task_js_1.OhosHapTask {
    constructor(taskService) {
        super(taskService, "CompileResource");
        this._log = ohos_logger_js_1.OhosLogger.getLogger(CompileResource.name);
    }
    taskShouldDo(targetData) {
        return this.moduleModel.getModuleType() !== undefined;
    }
    doTaskAction(targetData, target) {
        const pathInfo = targetData.getPathInfo();
        const projectModel = this.moduleModel.getParentProject();
        // 处理后最终传给restool的module.json，
        const processJson = pathInfo.getIntermediatesProcessProfile();
        // 处理后的module.json中的app属性
        const appOpt = project_file_reader_js_1.ProjectFileReader.getJson5Obj(processJson);
        const outputDir = pathInfo.getIntermediatesRes();
        file_util_js_1.FileUtil.checkDirWithoutDelete(outputDir);
        file_util_js_1.FileUtil.checkDirWithoutDelete(pathInfo.getGenerateSourceR());
        const restoolBuilder = new restool_command_builder_js_1.RestoolCommandBuilder(this.sdkInfo.getRestool());
        // 加入har依赖中的resources
        const harList = project_file_reader_js_1.ProjectFileReader.getJson5Obj(path_1.default.resolve(targetData.getPathInfo().getIntermediatesMergeRes(), build_directory_const_js_1.BuildArtifactConst.MERGE_NPM_FILE_JSON)).dependencies;
        harList.forEach(harPath => {
            restoolBuilder.addInputDir(path_1.default.resolve(harPath, "src", "main"));
        });
        restoolBuilder.addInputDir(this.moduleModel.getSourceSetByTargetName(target).getSourceSetRoot()); // 公共模块的资源
        if (this.service.getModuleModel().isHapModule()) {
            restoolBuilder.addInputDir(path_1.default.resolve(projectModel.getAppRes().getResourcePath(), "..")); // app级别的资源
        }
        restoolBuilder.addJsonFile(processJson)
            .addModulePackName(appOpt.app.bundleName)
            .addOutputDir(outputDir)
            .addResTable(path_1.default.resolve(pathInfo.getGenerateSourceR(), build_directory_const_js_1.BuildArtifactConst.RESOURCE_TABLE_H))
            .forceDelete()
            .addModules([...new Set([
                this.moduleModel.getName(),
                this.moduleModel.getSourceSetByTargetName(target)
                    .getModuleTargetRes().getModuleJsonOpt().module.name
            ])].join(','));
        const commands = restoolBuilder.build();
        this._log._printDebugCommand("Restool", commands);
        new process_utils_js_1.ProcessUtils(this.moduleName, this.taskName).executeSync(commands);
    }
}
exports.CompileResource = CompileResource;
//# sourceMappingURL=compile-resource.js.map