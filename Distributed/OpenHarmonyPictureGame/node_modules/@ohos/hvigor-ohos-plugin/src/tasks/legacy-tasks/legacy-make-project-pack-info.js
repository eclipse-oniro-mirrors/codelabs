"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
 *
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegacyMakeProjectPackInfo = void 0;
const ohos_app_task_js_1 = require("../task/ohos-app-task.js");
const path_1 = __importDefault(require("path"));
const build_directory_const_js_1 = require("../../const/build-directory-const.js");
const fs = __importStar(require("fs-extra"));
const project_file_reader_js_1 = require("../../utils/project-file-reader.js");
const ohos_logger_js_1 = require("../../utils/log/ohos-logger.js");
/**
 * 生成老模型hap级别的pack.info
 */
class LegacyMakeProjectPackInfo extends ohos_app_task_js_1.OhosAppTask {
    constructor(taskService, isFaMode) {
        super(taskService, "MakeProjectPackInfo");
        this._log = ohos_logger_js_1.OhosLogger.getLogger(LegacyMakeProjectPackInfo.name);
        // default value
        this._projectPackInfoObj = {
            summary: {
                app: {
                    bundleName: "bundleName",
                    version: {
                        name: "name",
                        code: 0
                    }
                },
                modules: []
            },
            packages: []
        };
        this._isFaMode = isFaMode;
    }
    doTaskAction() {
        if (!this._isFaMode) {
            fs.outputJSONSync(path_1.default.resolve(this.service.getPathInfo().getProjectOutputPath(), build_directory_const_js_1.BuildArtifactConst.PACK_INFO), {});
            return;
        }
        this.service.getProductDataMap().forEach((value) => {
            for (const moduleTargetData of value) {
                const hapPackInfo = path_1.default.resolve(moduleTargetData.getPathInfo().getModuleBuildOutputPath(), build_directory_const_js_1.BuildArtifactConst.PACK_INFO);
                if (!fs.existsSync(hapPackInfo)) {
                    continue;
                }
                const hapPackInfoObj = project_file_reader_js_1.ProjectFileReader.getJson5Obj(hapPackInfo);
                this._projectPackInfoObj.summary.app = hapPackInfoObj.summary.app; // 此处直接赋值 因为同一个app中该属性都是相同的.
                this._projectPackInfoObj.summary.modules.push(hapPackInfoObj.summary.modules[0]);
                this._projectPackInfoObj.packages.push(hapPackInfoObj.packages[0]);
            }
        });
        this._log.debug("Project Pack Info:", this._projectPackInfoObj);
        fs.outputJSONSync(path_1.default.resolve(this.service.getPathInfo().getProjectOutputPath(), build_directory_const_js_1.BuildArtifactConst.PACK_INFO), this._projectPackInfoObj);
    }
}
exports.LegacyMakeProjectPackInfo = LegacyMakeProjectPackInfo;
//# sourceMappingURL=legacy-make-project-pack-info.js.map