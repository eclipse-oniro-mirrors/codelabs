"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OhosModuleModelBean = void 0;
const map_util_js_1 = require("../../../utils/map-util.js");
const build_directory_const_js_1 = require("../../../const/build-directory-const.js");
const path_1 = __importDefault(require("path"));
const common_const_js_1 = require("../../../const/common-const.js");
/**
 * OhosProject中的Module模块的toolModel数据模型
 *
 * @since 2022/2/19
 */
class OhosModuleModelBean {
    constructor(module) {
        this.modelId = "ohos-module";
        this._module = module;
        this.modelId = this.modelId.concat("-").concat(module.getName());
        const plugin = module.getPlugin();
        this._moduleTaskService = plugin.getTaskService();
        this._targetDataMap = this._moduleTaskService.getTargetDataMap();
    }
    computeCommonInfo(info) {
        info.set("SELECT_TARGET", common_const_js_1.DefaultTargetConst.DEFAULT_TARGET);
        info.set("MODULE_BUILD_DIR", path_1.default.resolve(this._module.getModuleDir(), build_directory_const_js_1.BuildDirConst.BUILD_ROOT));
    }
    computePathInfo(info) {
        const targets = new Map();
        this._targetDataMap.forEach((value, key) => {
            const targetInfoMap = new Map();
            const modulePathInfo = value[0].getPathInfo();
            const moduleModel = this._moduleTaskService.getModuleModel();
            // 当前低代码的生成路径是固定的,只支持ETS
            const superVisualPath = path_1.default.resolve(modulePathInfo.getModuleBuildCachePath(), "CompileETS");
            const workerLoader = path_1.default.resolve(modulePathInfo.getIntermediatesLoaderPath(), build_directory_const_js_1.BuildArtifactConst.LOADER_JSON);
            const buildPath = {
                "OUTPUT_PATH": modulePathInfo.getModuleBuildOutputPath(),
                "JS_ASSETS_PATH": modulePathInfo.getIntermediatesAssetsPath(),
                "RES_PATH": modulePathInfo.getIntermediatesRes(),
                "RES_PROFILE_PATH": modulePathInfo.getIntermediatesResProfilePath(),
                "ETS_SUPER_VISUAL_PATH": superVisualPath,
                "WORKER_LOADER": workerLoader,
                "MANIFEST_JSON": modulePathInfo.getIntermediatesLegacyManifestJson()
            };
            // todo当前设置为默认的
            targetInfoMap.set("SOURCE_ROOT", moduleModel === null || moduleModel === void 0 ? void 0 : moduleModel.getSourceRootByTargetName(key));
            const resArr = [];
            resArr.push(moduleModel === null || moduleModel === void 0 ? void 0 : moduleModel.getSourceSetByTargetName(key).getTargetResPath());
            targetInfoMap.set("RESOURCES_PATH", resArr);
            targetInfoMap.set("BUILD_PATH", buildPath);
            targets.set(key, targetInfoMap);
        });
        info.set("TARGETS", targets);
    }
    buildModel() {
        const info = new Map();
        this.computeCommonInfo(info);
        this.computePathInfo(info);
        return (0, map_util_js_1.strMapToObj)(info);
    }
}
exports.OhosModuleModelBean = OhosModuleModelBean;
//# sourceMappingURL=ohos-module-model-bean.js.map