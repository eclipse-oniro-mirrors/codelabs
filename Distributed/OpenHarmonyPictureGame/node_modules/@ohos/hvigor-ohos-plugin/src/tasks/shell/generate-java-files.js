"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 *
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateJavaFiles = void 0;
const ohos_hap_task_js_1 = require("../task/ohos-hap-task.js");
const fse = __importStar(require("fs-extra"));
const path_1 = __importDefault(require("path"));
/**
 * 根据config.json生成java文件
 */
class GenerateJavaFiles extends ohos_hap_task_js_1.OhosHapTask {
    constructor(taskService) {
        super(taskService, "GenerateJavaFiles");
    }
    doTaskAction(targetData, target) {
        const moduleModel = this.service.getModuleModel();
        const configOpt = moduleModel.getJsonObjByTargetName(target);
        // 为每个ability生成一个java文件
        const abilityObjs = moduleModel.getLegacyAbilities();
        for (let i = 0; i < abilityObjs.length; i++) {
            this.createJavaFile(abilityObjs[i], targetData, configOpt);
        }
    }
    createJavaFile(abilityInfo, targetData, configOpt) {
        const abilityType = abilityInfo.getType();
        // 读取模板文件
        const tempFilePath = path_1.default.resolve(__dirname, `../../../res/template/${abilityType}.temp`);
        const templateJavaBuffer = fse.readFileSync(tempFilePath);
        // 替换ability对应字符串,生成java字符串
        let templateJavaFileStr = templateJavaBuffer.toString();
        // 如果name是点开头, 则ability的name是点后面的字符串
        const abilityName = abilityInfo.getName().charAt(0) === '.' ?
            abilityInfo.getName().substring(1) : abilityInfo.getName();
        templateJavaFileStr = templateJavaFileStr.replace('ABILITY_NAME', abilityName);
        const packageName = configOpt.module.package;
        templateJavaFileStr = templateJavaFileStr.replace('PACKAGE_NAME', packageName);
        const srcPath = abilityInfo.getRelateSrcPath();
        templateJavaFileStr = templateJavaFileStr.replace('ABILITY_SRC_PATH', srcPath);
        // 将string写到java文件中
        const packagePath = packageName.replace(new RegExp('\\.', 'g'), '/');
        const generatedJavaFilePath = path_1.default.resolve(this.getTaskTempDir(targetData), packagePath, `${abilityName}.java`);
        fse.outputFileSync(generatedJavaFilePath, templateJavaFileStr);
    }
}
exports.GenerateJavaFiles = GenerateJavaFiles;
//# sourceMappingURL=generate-java-files.js.map