"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2022-2022. All rights reserved.
 *
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModulePathInfoIml = void 0;
const path_1 = __importDefault(require("path"));
const build_directory_const_js_1 = require("../../const/build-directory-const.js");
const common_const_js_1 = require("../../const/common-const.js");
class ModulePathInfoIml {
    constructor(curModule, targetName, productName, buildRoot = build_directory_const_js_1.BuildDirConst.BUILD_ROOT) {
        this._curModule = curModule;
        this._targetName = targetName;
        this._modulePath = curModule.getProjectDir();
        this._productName = productName;
        this._buildRoot = buildRoot;
    }
    getBuildRoot() {
        return this._buildRoot;
    }
    getModuleBuildPath() {
        return path_1.default.resolve(this._modulePath, this._buildRoot);
    }
    getModuleProductPath() {
        return path_1.default.resolve(this.getModuleBuildPath(), this._productName);
    }
    getModuleBuildIntermediates() {
        return path_1.default.resolve(this.getModuleProductPath(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES);
    }
    getModuleBuildGenerated() {
        return path_1.default.resolve(this.getModuleProductPath(), build_directory_const_js_1.BuildDirConst.GENERATED);
    }
    getModuleBuildOutputPath() {
        return path_1.default.resolve(this.getModuleProductPath(), build_directory_const_js_1.BuildDirConst.BUILD_OUTPUTS, this._targetName);
    }
    getIntermediatesMergeRes() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_MERGE_RES, this._targetName);
    }
    getIntermediatesMergeFile() {
        return path_1.default.resolve(this.getIntermediatesMergeRes(), build_directory_const_js_1.BuildArtifactConst.MERGE_RES_FILE_INDEX);
    }
    getIntermediatesMergeProfile() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_MERGE_PROFILE, this._targetName, common_const_js_1.CommonConst.MODULE_JSON);
    }
    getIntermediatesMergeProfileDir() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_MERGE_PROFILE, this._targetName);
    }
    getGenerateSourceR() {
        return path_1.default.resolve(this.getModuleBuildGenerated(), build_directory_const_js_1.BuildDirConst.R, this._targetName);
    }
    getIntermediatesProcessProfile() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_PROCESS_PROFILE, this._targetName, common_const_js_1.CommonConst.MODULE_JSON);
    }
    getIntermediatesProcessLegacyProfile() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_PROCESS_PROFILE, this._targetName, common_const_js_1.CommonConst.CONFIG_JSON);
    }
    getIntermediatesRes() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_RES, this._targetName);
    }
    getIntermediatesOriginalRes() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_ORIGINAL_RES, this._targetName);
    }
    /**
     * restool编译结果的产物profile的路径
     * 其中resources,base,profile是固定的，是restool中的定义
     *
     * @return ../intermediates/res/{targetName}/res/base/profile
     */
    getIntermediatesResProfilePath() {
        return path_1.default.resolve(this.getIntermediatesRes(), build_directory_const_js_1.BuildDirConst.RESTOOL_BUILD_RESOURCES, build_directory_const_js_1.BuildDirConst.BASE, build_directory_const_js_1.BuildDirConst.PROFILE);
    }
    getIntermediatesAssetsPath() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.JS_BUILD_ASSETS, this._targetName);
    }
    getIntermediatesLoaderPath() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.LOADER, this._targetName);
    }
    getModuleBuildCachePath() {
        return path_1.default.resolve(this.getModuleProductPath(), build_directory_const_js_1.BuildDirConst.BUILD_CACHE, this._targetName);
    }
    getIntermediatesMergeLegacyProfile() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.INTERMEDIATES_MERGE_PROFILE, this._targetName, common_const_js_1.CommonConst.CONFIG_JSON);
    }
    getIntermediatesLegacyManifestJson() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.LEGACY_MANIFEST, this._targetName);
    }
    getIntermediatesPackInfoDir() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.LEGACY_MANIFEST, this._targetName);
    }
    getIntermediatesProcessLibs() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.LIBS, this._targetName);
    }
    getIntermediatesSysCap() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.SYSCAP, this._targetName);
    }
    getCppOutputDir() {
        return path_1.default.resolve(this._modulePath, build_directory_const_js_1.BuildDirConst.CPP_OUTPUT);
    }
    getModuleShellDir() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.SHELL);
    }
    getShellResourceDir() {
        return path_1.default.resolve(this.getModuleShellDir(), build_directory_const_js_1.BuildDirConst.SRC, build_directory_const_js_1.BuildDirConst.MAIN, build_directory_const_js_1.BuildDirConst.INTERMEDIATES_RES);
    }
    getShellBuildResourceDir() {
        return path_1.default.resolve(this.getModuleShellDir(), build_directory_const_js_1.BuildDirConst.BUILD_ROOT, build_directory_const_js_1.BuildDirConst.INTERMEDIATES_RES);
    }
    getIntermediatesCppOutPut() {
        return path_1.default.resolve(this.getModuleBuildIntermediates(), build_directory_const_js_1.BuildDirConst.CMAKE, this._targetName, build_directory_const_js_1.BuildDirConst.OBJ);
    }
}
exports.ModulePathInfoIml = ModulePathInfoIml;
//# sourceMappingURL=module-path-info-iml.js.map