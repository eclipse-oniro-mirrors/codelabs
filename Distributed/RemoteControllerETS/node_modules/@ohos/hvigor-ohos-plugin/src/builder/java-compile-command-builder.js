"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.JavaCompileCommandBuilder = void 0;
const base_command_builder_js_1 = require("./base-command-builder.js");
class JavaCompileCommandBuilder extends base_command_builder_js_1.BaseCommandBuilder {
    constructor() {
        super([]);
        this.commandList.push("javac");
    }
    addEncoding(encoding) {
        this.commandList.push('-encoding');
        this.commandList.push(encoding);
        return this;
    }
    addTarget(target) {
        this.commandList.push('-target');
        this.commandList.push(target);
        return this;
    }
    addBootClasspath(bootClasspath) {
        this.commandList.push('-bootclasspath');
        this.commandList.push(bootClasspath);
        return this;
    }
    addClasspath(classpath) {
        this.commandList.push('-classpath');
        this.commandList.push(classpath);
        return this;
    }
    addDest(dest) {
        this.commandList.push('-d');
        this.commandList.push(dest);
        return this;
    }
    addProcessor(processor) {
        this.commandList.push('-processor');
        this.commandList.push(processor);
        return this;
    }
    addProcessorPath(processorPath) {
        this.commandList.push('-processorpath');
        this.commandList.push(processorPath);
        return this;
    }
    addIndexFile(indexFile) {
        this.commandList.push(`@${indexFile}`);
        return this;
    }
    showDebugInfo() {
        this.commandList.push('-g');
        return this;
    }
}
exports.JavaCompileCommandBuilder = JavaCompileCommandBuilder;
//# sourceMappingURL=java-compile-command-builder.js.map