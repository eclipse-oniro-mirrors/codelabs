"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegacyProjectModelImpl = void 0;
const module_type_enum_js_1 = require("../../enum/module-type-enum.js");
const core_project_model_impl_js_1 = require("./core-project-model-impl.js");
class LegacyProjectModelImpl extends core_project_model_impl_js_1.CoreProjectModelImpl {
    constructor(projectPath, name) {
        super(projectPath, name);
    }
    static getInstance(projectPath, name) {
        if (!LegacyProjectModelImpl.instance) {
            if (projectPath === null || projectPath === undefined) {
                throw new Error("工程模型还未初始化，请正确传递工程路径");
            }
            if (name === null || name === undefined) {
                throw new Error("工程模型还未初始化，请正确传递工程名称");
            }
            LegacyProjectModelImpl.instance = new LegacyProjectModelImpl(projectPath, name);
        }
        return LegacyProjectModelImpl.instance;
    }
    getDefaultBundleName() {
        let defaultBundleName = "";
        try {
            this.subModels.forEach((value, key, map) => {
                if (value.isHapModule() && value.getModuleType() === module_type_enum_js_1.ModuleType.Entry) {
                    const legacyModuleModel = value;
                    defaultBundleName = legacyModuleModel
                        .getSourceSetByTargetName()
                        .getLegacyModuleTargetRes()
                        .getConfigJsonOpt()
                        .app
                        .bundleName;
                    // end for each loop
                    throw new Error("End loop.");
                }
            });
        }
        catch (e) {
            // do nothing
        }
        return defaultBundleName;
    }
}
exports.LegacyProjectModelImpl = LegacyProjectModelImpl;
//# sourceMappingURL=legacy-project-model-impl.js.map