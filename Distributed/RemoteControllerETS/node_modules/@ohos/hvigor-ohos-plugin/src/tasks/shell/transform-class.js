"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 *
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransformClass = void 0;
const ohos_hap_task_js_1 = require("../task/ohos-hap-task.js");
const fse = __importStar(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const os_1 = __importDefault(require("os"));
const d8_options_js_1 = require("../../builder/inner-java-command-builder/d8-options.js");
const ohos_logger_js_1 = require("../../utils/log/ohos-logger.js");
/**
 * transform class
 */
class TransformClass extends ohos_hap_task_js_1.OhosHapTask {
    constructor(taskService) {
        super(taskService, "TransformClass");
        this._log = ohos_logger_js_1.OhosLogger.getLogger(TransformClass.name);
    }
    doTaskAction(targetData, target) {
        /*
         * collect all class files
         *
         */
        const classDir = path_1.default.resolve(this.getTaskTempDir(targetData), 'classes');
        const classFiles = path_1.default.resolve(this.getTaskTempDir(targetData), 'classesFile');
        this.generateClassesFiles(classDir, classFiles);
        const d8Builder = new d8_options_js_1.D8Options();
        d8Builder.addJvmOption("-Xmx1024M")
            .addJvmOption("-Xss1m")
            // .addClassPath(sdkInfo.getD8())
            .addMainClass('com.android.tools.r8.D8');
        // construct command builder
        d8Builder.addInputDir(classFiles)
            .addOutputDir(this.getTaskTempDir(targetData));
        this._log.debug(d8Builder.build());
    }
    /**
     * 遍历classDir目录, 并在指定位置生成所有字节码文件
     *
     * @param classDir 起始遍历的目录
     * @param classFilePath 生成的文件路径
     */
    generateClassesFiles(classDir, classFilePath) {
        const classFilesArray = this.listFile(classDir, [], new RegExp(/\.class$/));
        const fileStr = classFilesArray.join(os_1.default.EOL);
        this._log.debug("==========class files==========");
        this._log.debug(fileStr);
        fse.outputFileSync(classFilePath, fileStr);
    }
    /**
     * 按照正则规则遍历目录, 保存符合规则的文件路径到list中
     *
     * @param dir 开始遍历的目录
     * @param list 保存的list
     * @param regex 正则规则
     */
    listFile(dir, list, regex = undefined) {
        if (!fse.existsSync(dir) || !fse.statSync(dir).isDirectory()) {
            return [];
        }
        const files = fse.readdirSync(dir);
        files.forEach((subFileName) => {
            const fullPath = path_1.default.join(dir, subFileName);
            const stats = fse.statSync(fullPath);
            if (stats.isDirectory()) {
                this.listFile(fullPath, list, regex);
            }
            else {
                if (regex && !regex.test(subFileName)) {
                    return;
                }
                list.push(fullPath);
            }
        });
        return list;
    }
}
exports.TransformClass = TransformClass;
//# sourceMappingURL=transform-class.js.map