"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 *
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplacePreviewerPage = void 0;
const hvigor_base_1 = require("@ohos/hvigor-base");
const ohos_hap_task_1 = require("../task/ohos-hap-task");
const path_1 = __importDefault(require("path"));
const common_const_1 = require("../../const/common-const");
const fse = __importStar(require("fs-extra"));
const inject_const_1 = require("../../const/inject-const");
const project_file_reader_js_1 = require("../../utils/project-file-reader.js");
const ohos_logger_js_1 = require("../../utils/log/ohos-logger.js");
/**
 * accept preview args then replace into page file
 */
class ReplacePreviewerPage extends ohos_hap_task_1.OhosHapTask {
    constructor(taskService) {
        super(taskService, 'ReplacePreviewerPage');
        this._log = ohos_logger_js_1.OhosLogger.getLogger(ReplacePreviewerPage.name);
    }
    doTaskAction(targetData, target) {
        const previewPage = hvigor_base_1.vigorConfigInst.getExtraConfig().get(inject_const_1.InjectConst.PREVIEWER_REPLACE_PAGE);
        if (!previewPage) {
            return;
        }
        const pathInfo = targetData.getPathInfo();
        const moduleJsonPath = path_1.default.resolve(pathInfo.getIntermediatesRes(), common_const_1.CommonConst.MODULE_JSON);
        const moduleJsonObj = project_file_reader_js_1.ProjectFileReader.getJson5Obj(moduleJsonPath);
        // $profile:xxxxxx
        const pagesStr = moduleJsonObj.module.pages;
        if (!pagesStr) {
            this._log._buildError("Unabled to replace. Cannot find moduleJsonObj.module.pages.")
                ._printErrorAndExit(this.moduleModel.getName());
            return;
        }
        const pageModel = {
            src: [previewPage]
        };
        const pageJsonFileName = `${pagesStr.replace(/\$profile:/, '')}.json`;
        // todo 该路径可以封装一下 后续做page替换时会常用到
        const pageJsonFilePath = path_1.default.resolve(pathInfo.getIntermediatesResProfilePath(), pageJsonFileName);
        this._log.debug(`Resolved file ${pageJsonFilePath}.`);
        this._log.debug(`Replace page to ${previewPage}`);
        fse.outputJSONSync(pageJsonFilePath, pageModel);
    }
}
exports.ReplacePreviewerPage = ReplacePreviewerPage;
//# sourceMappingURL=replace-previewer-page.js.map