"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2022. All rights reserved.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceType = void 0;
/**
 * config.json中设备类型的枚举
 *
 * @since 2022/2/25
 */
const ohos_logger_js_1 = require("../utils/log/ohos-logger.js");
const _log = ohos_logger_js_1.OhosLogger.getLogger("DeviceType");
var DeviceType;
(function (DeviceType) {
    DeviceType[DeviceType["PHONE"] = 0] = "PHONE";
    DeviceType[DeviceType["TV"] = 1] = "TV";
    DeviceType[DeviceType["TABLET"] = 2] = "TABLET";
    DeviceType[DeviceType["CAR"] = 3] = "CAR";
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
/**
 * 为枚举类型DeviceType附加方法
 *
 * @since 2022/2/25
 */
(function (DeviceType) {
    function valueOf(deviceTypeStr) {
        switch (deviceTypeStr) {
            case "phone":
                return DeviceType.PHONE;
            case "tv":
                return DeviceType.TV;
            case "tablet":
                return DeviceType.TABLET;
            case "car":
                return DeviceType.CAR;
            default:
                _log._buildError(`DeviceType: ${deviceTypeStr} is an invalid value. Please check it.`)
                    ._solution(`Value should be one of: "phone", "tv", "tablet", "car"`)
                    ._printErrorAndExit();
                return DeviceType.PHONE;
        }
    }
    DeviceType.valueOf = valueOf;
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
//# sourceMappingURL=device-type-enum.js.map